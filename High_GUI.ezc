easy_c 1.0

library Easy_C
library Math
library CV
require High_GUI_C
include "High_GUI_C.h"
#load "-lcvaux -lopencv_highgui"
load "-lopencv_highgui"

define CV_Capture			# CvCapture *
    external

define CV_Video_Writer			# CvVideoWriter *
    external

external null@CV_Capture CV_Capture	# Null {CV_Capture} object
external null@CV_Video_Writer CV_Video_Writer # Null {CV_Video_Writer} object

routine create_camera_capture@CV
    takes index Integer
    returns CV_Capture
    external cvCreateCameraCapture

    # This routine will return a {CV_Capture} object connected to the
    # {index}'th camera.  


routine create_file_capture@CV
    takes capture_file_name String
    returns CV_Capture
    external CV__create_file_capture

    # This routine will create and return a {CV_Capture} object for
    # the purpose of reading video from {capture_file_name}.


routine create_video_writer@CV
    takes out_file_name String
    takes codec Integer
    takes fps Double
    takes size CV_Size
    takes is_color Integer
    returns CV_Video_Writer
    external CV__create_video_writer

    # This routine will create and return a {CV_Writer} object for
    # writing video to {out_file_name} with a frames per second of {fps},
    # and frame size of {size}.  {codec} specifies the encoder in
    # Four CC format.  {is_color} specifies the color somehow.


routine destroy_window@CV
    takes window_name String
    returns_nothing
    external CV__destroy_window

    # This routine will destroy the window named {window} name and
    # thereby cause it to disappear from the screen.

routine get_capture_property@CV
    takes capture CV_Capture
    takes property_id Integer
    returns Double
    external cvGetCaptureProperty


routine load_image@CV
    takes file_name String
    takes is_color Integer
    returns CV_Image
    external CV__load_image

    # This routine will read in the image from {file_name} and return
    # it encapsulated in a {CV_Image} object.  {is_color} can be any
    # combination of {cv_load_image_unchanged@Integer},
    # {cv_load_image_grayscale@Integer}, {cv_load_image_color@Integer},
    # {cv_load_image_anydepth@Integer}, or {cv_load_image_anycolor@Integer}.


routine named_window@CV
    takes window_name String
    takes flags Integer
    returns Integer
    external CV__named_window

    # This routine will create a named window with a name of {window_name}
    # and {flags} specified for its properties.


routine query_frame@CV
    takes capture CV_Capture
    returns CV_Image
    external cvQueryFrame

    # This routine will get the next frame from {capture} and return
    # it in a {CV_Image} object.


routine release_capture@CV
    takes capture CV_Capture
    returns_nothing
    external CV__release_capture

    # This routine will release {capture}.


routine release_video_writer@CV
    takes writer CV_Video_Writer
    returns_nothing
    external CV__release_video_writer

    # This routine will destroy {writer}.


routine show_image@CV
    takes window_name String
    takes image CV_Image
    returns_nothing
    external CV__show_image

    # This routine will render {image} inside of the window name {window_name}.


routine wait_key@CV
    takes delay Integer
    returns Integer
    external cvWaitKey

    # This routine will wait for a key event or delay for {delay} milliseconds.
    # If {delay} is 0, the delay is infinite.


routine write_frame@CV
    takes writer CV_Video_Writer
    takes frame CV_Image
    returns Integer
    external CV__write_frame

    # This routine will write {frame} to {writer}.  Some return
    # value is returned.


